set role postgres;

create table if not exists public.users (
  id bigint generated by default as identity primary key,
  username text unique not null,
  trigram text not null,
  password text not null,
  role text not null,
  created_at timestamptz not null default now()
);

alter table if exists public.users
  add column if not exists trigram text;

update public.users
set trigram = coalesce(nullif(trim(trigram), ''), upper(left(username, 3)))
where trigram is null or trigram = '';

alter table if exists public.users
  alter column trigram set not null;

insert into public.users (username, trigram, password, role)
values ('admin', 'ADM', 'Melatonine', 'administrateur')
on conflict (username) do nothing;

create table if not exists public.doctor_entries (
  id bigint generated by default as identity primary key,
  user_id bigint not null references public.users(id) on delete cascade,
  date date not null,
  type text not null,
  notes text,
  created_at timestamptz not null default now()
);

create index if not exists doctor_entries_user_id_idx on public.doctor_entries (user_id, date);

create table if not exists public.replacement_entries (
  id bigint generated by default as identity primary key,
  user_id bigint not null references public.users(id) on delete cascade,
  date date not null,
  slot text not null,
  notes text,
  created_at timestamptz not null default now()
);

create index if not exists replacement_entries_user_id_idx on public.replacement_entries (user_id, date);

reset role;
